<script>
    const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    const circlept = entry.target.querySelector('.circlept');

    if (entry.isIntersecting) {
      circlept.classList.add('animpt');
	  return;
    }
    circlept.classList.remove('animpt');
  });

  entries.forEach(entry => {
    const circler = entry.target.querySelector('.circler');

    if (entry.isIntersecting) {
      circler.classList.add('animr');
	  return; 
    }
    circler.classList.remove('animr');
  });

    entries.forEach(entry => {
        const circlejs = entry.target.querySelector('.circlejs');
    
        if (entry.isIntersecting) {
        circlejs.classList.add('animjs');
        return; 
        }
        circlejs.classList.remove('animjs');
    });

    entries.forEach(entry => {
        const circleph = entry.target.querySelector('.circleph');
    
        if (entry.isIntersecting) {
        circleph.classList.add('animph');
        return; 
        }
        circleph.classList.remove('animph');
    });

    entries.forEach(entry => {
        const circlec = entry.target.querySelector('.circlec');
    
        if (entry.isIntersecting) {
        circlec.classList.add('animc');
        return; 
        }
        circlec.classList.remove('animc');
    });

    entries.forEach(entry => {
        const circlets = entry.target.querySelector('.circlets');
    
        if (entry.isIntersecting) {
        circlets.classList.add('animts');
        return; 
        }
        circlets.classList.remove('animts');
    });

    entries.forEach(entry => {
        const circlehtml = entry.target.querySelector('.circlehtml');
    
        if (entry.isIntersecting) {
        circlehtml.classList.add('animhtml');
        return; 
        }
        circlehtml.classList.remove('animhtml');
    });

    entries.forEach(entry => {
        const circlecss = entry.target.querySelector('.circlecss');
    
        if (entry.isIntersecting) {
        circlecss.classList.add('animcss');
        return; 
        }
        circlecss.classList.remove('animcss');
    });

    entries.forEach(entry => {
        const circlesql = entry.target.querySelector('.circlesql');
    
        if (entry.isIntersecting) {
        circlesql.classList.add('animsql');
        return; 
        }
        circlesql.classList.remove('animsql');
    });

    entries.forEach(entry => {
        const circlegh = entry.target.querySelector('.circlegh');
    
        if (entry.isIntersecting) {
        circlegh.classList.add('animgh');
        return; 
        }
        circlegh.classList.remove('animgh');
    });

    entries.forEach(entry => {
        const circlek = entry.target.querySelector('.circlek');
    
        if (entry.isIntersecting) {
        circlek.classList.add('animk');
        return; 
        }
        circlek.classList.remove('animk');
    });

    entries.forEach(entry => {
        const circlej = entry.target.querySelector('.circlej');
    
        if (entry.isIntersecting) {
        circlej.classList.add('animj');
        return; 
        }
        circlej.classList.remove('animj');
    });
});

observer.observe(document.querySelector('.languages'));
</script>

<script>
import {gsap} from "gsap";

const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    const pres = entry.target.querySelector('.languages');

    if (entry.isIntersecting) {
        let tl1 = gsap.timeline({
                scrollTrigger:{
                    trigger: ".languages",
                    start: "center 50%",
                    end: "bottom bottom",
                    scrub: false,
                    markers: true,
                    toggleActions: 'play reverse play reverse'
                }
            })
            tl1.to(".languages", {
                duration:3,
                opacity:1,
                y: -100,
                ease: "power4.out"
            })
    }
  });
});
    
observer.observe(document.querySelector('.languages'));
</script>

<section class="box languages">
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-Python`} src={"/Portfolio/assets/Python.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlept"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-Rust`} src={"/Portfolio/assets/Rust.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circler"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-JavaScript`} src={"/Portfolio/assets/js.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlejs"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-php`} src={"/Portfolio/assets/php.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circleph"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-C`} src={"/Portfolio/assets/c.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlec"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-TypeScript`} src={"/Portfolio/assets/ts.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlets"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-HTML`} src={"/Portfolio/assets/html.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlehtml"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-CSS`} src={"/Portfolio/assets/css.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlecss"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-SQL`} src={"/Portfolio/assets/SQL.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlesql"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-GitHub`} src={"/Portfolio/assets/github.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlegh"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-Kotlin`} src={"/Portfolio/assets/kotlin.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlek"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-Java`} src={"/Portfolio/assets/java.webp"} alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlej"/>
                </svg>
            </div>
</section>

<style>
    .languages {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    margin: auto;
    margin-bottom: 40dvh;
    opacity: 0;
    }

    .image {
    width: 40%;
    height: 40%;
    object-fit: cover;
    }

	@media (min-width: 50em) {

		.languages {
			display: grid;
			grid-template-columns: repeat(6, 1fr);
			gap: 2rem;
		}}
    
    @media (max-width: 1200px) {
        .languages {
        grid-template-columns: repeat(4, 2fr);
        margin-bottom: 10dvh;
        }
    }
    @media (max-width: 1000px) {
        .languages {
        grid-template-columns: repeat(3, 3fr);
        margin-bottom: 20dvh;
        }
    }
    @media (max-width: 800px) {
        .languages {
        grid-template-columns: repeat(2, 4fr);
        margin-bottom: 40dvh;
        }
    }
    .stack{
        width: 144px;
        height: 144px;
        margin: 1rem;
        position: relative;
    }

    .outer{
        width: 144px;
        height: 144px;
        padding: 20px;
        box-shadow: 1.5px 1.5px 2.5px -0.25px rgba(0,0,0,0.15), -1.5px -1.5px 2.5px -0.25px rgba(255,255,255,0.7);
        border-radius: 50%;
    }

    .inner{
        height: 108px;
        width: 108px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: inset 1px 1px 1.5px -0.25px rgba(0,0,0,0.2), inset -1px -1px 1.5px -0.25px rgba(255,255,255,0.7), -0.125px -0.125px 0px rgba(255, 255, 255, 1), 0.125 0.125px 0px rgba(0, 0, 0, 0.15), 0px 3px 2.5px -2.5px rgba(0, 0, 0, 0.05);
        border-radius: 50%;
    }

    .circlept{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circler{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlejs{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circleph{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlec{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlets{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlehtml{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlecss{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlesql{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlegh{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlek{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlej{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .animpt {
        animation: animpt 1s linear forwards;
    }

    .animr {
        animation: animr 1s linear forwards;
    }

    .animjs {
        animation: animjs 1s linear forwards;
    }

    .animph {
        animation: animph 1s linear forwards;
    }

    .animc {
        animation: animc 1s linear forwards;
    }

    .animts {
        animation: animts 1s linear forwards;
    }

    .animhtml {
        animation: animhtml 1s linear forwards;
    }

    .animcss {
        animation: animcss 1s linear forwards;
    }

    .animsql {
        animation: animsql 1s linear forwards;
    }

    .animgh {
        animation: animgh 1s linear forwards;
    }

    .animk {
        animation: animk 1s linear forwards;
    }

    .animj {
        animation: animj 1s linear forwards;
    }


    @keyframes animpt {
    100% {
        stroke-dashoffset: 110;
    }
    }

    @keyframes animr {
        100% {
            stroke-dashoffset: 160;
        }
    }

    @keyframes animjs {
        100% {
            stroke-dashoffset: 310;
        }
    }

    @keyframes animph {
        100% {
            stroke-dashoffset: 210;
        }
    }

    @keyframes animc {
        100% {
            stroke-dashoffset: 280;
        }
    }

    @keyframes animts {
        100% {
            stroke-dashoffset: 380;
        }
    }

    @keyframes animhtml {
        100% {
            stroke-dashoffset: 140;
        }
    }

    @keyframes animcss {
        100% {
            stroke-dashoffset: 140;
        }
    }

    @keyframes animsql {
        100% {
            stroke-dashoffset: 230;
        }
    }

    @keyframes animgh {
        100% {
            stroke-dashoffset: 230;
        }
    }

    @keyframes animk {
        100% {
            stroke-dashoffset: 300;
        }
    }

    @keyframes animj {
        100% {
            stroke-dashoffset: 320;
        }
    }

    svg{
        position: absolute;
        top: 0;
        left: 0;
    }
</style>