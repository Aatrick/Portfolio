<script>
    const observer = new IntersectionObserver(entries => {
  entries.forEach(entry => {
    const circlesv = entry.target.querySelector('.circlesv');

    if (entry.isIntersecting) {
      circlesv.classList.add('animsv');
	  return;
    }
    circlesv.classList.remove('animsv');
  });

  entries.forEach(entry => {
    const circlela = entry.target.querySelector('.circlela');

    if (entry.isIntersecting) {
      circlela.classList.add('animla');
	  return; 
    }
    circlela.classList.remove('animla');
  });

    entries.forEach(entry => {
        const circleas = entry.target.querySelector('.circleas');
    
        if (entry.isIntersecting) {
        circleas.classList.add('animas');
        return; 
        }
        circleas.classList.remove('animas');
    });

    entries.forEach(entry => {
        const circleTW = entry.target.querySelector('.circleTW');
    
        if (entry.isIntersecting) {
        circleTW.classList.add('animTW');
        return; 
        }
        circleTW.classList.remove('animTW');
    });

    entries.forEach(entry => {
        const circlePG = entry.target.querySelector('.circlePG');
    
        if (entry.isIntersecting) {
        circlePG.classList.add('animPG');
        return; 
        }
        circlePG.classList.remove('animPG');
    });
});

observer.observe(document.querySelector('.framework'));
</script>

<section class="box framework">
        <div class="stack gap-2 lg:gap-4">
            <div class="outer">
                <div class="inner">
                    <img id={`image-astro`} src="/Portfolio/assets/astro.webp" alt="Description" class="image">
                </div>
            </div>
            <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                <defs>
                    <linearGradient id="GradientColor">
                        <stop offset="0%" stop-color="#DA22FF" />
                        <stop offset="100%" stop-color="#9733EE" />
                    </linearGradient>
                </defs>
                <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circleas"/>
            </svg>
        </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-svelte`} src="/Portfolio/assets/svelte.webp" alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <defs>
                        <linearGradient id="GradientColor">
                            <stop offset="0%" stop-color="#DA22FF" />
                            <stop offset="100%" stop-color="#9733EE" />
                        </linearGradient>
                    </defs>
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlesv"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-laravel`} src="/Portfolio/assets/laravel.webp" alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <defs>
                        <linearGradient id="GradientColor">
                            <stop offset="0%" stop-color="#DA22FF" />
                            <stop offset="100%" stop-color="#9733EE" />
                        </linearGradient>
                    </defs>
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlela"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-TailWindCSS`} src="/Portfolio/assets/tailwindcss.webp" alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <defs>
                        <linearGradient id="GradientColor">
                            <stop offset="0%" stop-color="#DA22FF" />
                            <stop offset="100%" stop-color="#9733EE" />
                        </linearGradient>
                    </defs>
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circleTW"/>
                </svg>
            </div>
            <div class="stack gap-2 lg:gap-4">
                <div class="outer">
                    <div class="inner">
                        <img id={`image-PostGreSQL`} src="/Portfolio/assets/postgresql.webp" alt="Description" class="image">
                    </div>
                </div>
                <svg xmlns="http://www.w3.org/2000/svg" version="1.1" width="144px" height="144px">
                    <defs>
                        <linearGradient id="GradientColor">
                            <stop offset="0%" stop-color="#DA22FF" />
                            <stop offset="100%" stop-color="#9733EE" />
                        </linearGradient>
                    </defs>
                    <circle cx="72" cy="72" r="63" stroke-linecap="round" class="circlePG"/>
                </svg>
            </div>

</section>

<style>
    .framework {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    margin: auto;
    margin-bottom: 100vh;
    }

    .image {
    width: 40%;
    height: 40%;
    object-fit: cover;
    }

	@media (min-width: 50em) {

		.framework {
			display: grid;
			grid-template-columns: repeat(5, 1fr);
			gap: 2rem;
		}}
    
    @media (max-width: 1200px) {
        .framework {
        grid-template-columns: repeat(4, 2fr);
        margin-bottom: 10vh;
        }
    }
    @media (max-width: 1000px) {
        .framework {
        grid-template-columns: repeat(3, 3fr);
        margin-bottom: 20vh;
        }
    }
    @media (max-width: 800px) {
        .framework {
        grid-template-columns: repeat(2, 4fr);
        margin-bottom: 30vh;
        }
    }
    .stack{
        width: 144px;
        height: 144px;
        margin: 1rem;
        position: relative;
    }

    .outer{
        width: 144px;
        height: 144px;
        padding: 18px;
        box-shadow: 1.5px 1.5px 2.5px -0.25px rgba(0,0,0,0.15), -1.5px -1.5px 2.5px -0.25px rgba(255,255,255,0.7);
        border-radius: 50%;
    }

    .inner{
        height: 108px;
        width: 108px;
        display: flex;
        align-items: center;
        justify-content: center;
        box-shadow: inset 1px 1px 1.5px -0.25px rgba(0,0,0,0.2), inset -1px -1px 1.5px -0.25px rgba(255,255,255,0.7), -0.125px -0.125px 0px rgba(255, 255, 255, 1), 0.125 0.125px 0px rgba(0, 0, 0, 0.15), 0px 3px 2.5px -2.5px rgba(0, 0, 0, 0.05);
        border-radius: 50%;
    }

    #number{
        font-weight: 540;
        color: #555;
        font-size: 27px;
    }

    .circlesv{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlela{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circleas{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circleTW{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .circlePG{
        fill: none;
        stroke: url(#GradientColor);
        stroke-width: 18px;
        stroke-dasharray: 450;
        stroke-dashoffset: 450;
    }

    .animsv{
        animation: animsv 1s linear forwards;
    }

    .animla{
        animation: animla 1s linear forwards;
    }

    .animas{
        animation: animas 1s linear forwards;
    }

    .animTW{
        animation: animTW 1s linear forwards;
    }

    .animPG{
        animation: animPG 1s linear forwards;
    }

    @keyframes animsv{
        100%{
            stroke-dashoffset: 170;
        }
    }

    @keyframes animla{
        100%{
            stroke-dashoffset: 310;
        }
    }

    @keyframes animas{
        100%{
            stroke-dashoffset: 140;
        }
    }

    @keyframes animTW{
        100%{
            stroke-dashoffset: 290;
        }
    }

    @keyframes animPG{
        100%{
            stroke-dashoffset: 240;
        }
    }


    svg{
        position: absolute;
        top: 0;
        left: 0;
    }
</style>