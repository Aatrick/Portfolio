---
import { getCollection } from 'astro:content';

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from '../layouts/BaseLayout.astro';

// Component Imports
import Grid from '../components/Grid.astro';
import Hero from '../components/Hero.astro';
import Icon from '../components/Icon.astro';
import Pill from '../components/Pill.astro';
import PortfolioPreview from '../components/PortfolioPreview.astro';
import Presentation from '../components/presentation.astro';
import Languages from '../components/languages.astro';

// Page section components
import Education from '../components/Education.astro';
import Framework from '../components/Framework.astro';
import Langues from '../components/Langues.astro';

// Content Fetching: List four most recent work projects
const projects = (await getCollection('work'))
	.sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
	.slice(0, 7);
---

<BaseLayout>
	<div class="stack gap-20 lg:gap-48">
		<div class="wrapper stack gap-8 lg:gap-20">
			<header class="hero" style="min-height: 100vh; overflow: hidden;">
				<Hero
				title='Salut ! ðŸ‘‹'
				title2='Je suis Aatricks'
				align="start">
					<div class="roles">
						<Pill><Icon icon="code" size="1.33em" /> DÃ©veloppeur</Pill>
						<Pill><img width="20" height="20" src="/Portfolio/assets/engineer.webp"/>IngÃ©nieur</Pill>
					</div>
					<div class="w-full flex flex-row justify-center pt-30">
						<div class="animate-bounce bg-white dark:bg-slate-800 w-10 h-10 ring-1 ring-slate-900/5 dark:ring-slate-200/20 shadow-lg rounded-full flex items-center justify-center">
							<svg class="w-6 h-6 text-violet-500" fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor">
							<path d="M19 14l-7 7m0 0l-7-7m7 7V3"></path>
							</svg>
						</div>
						</div>
				</Hero>
				<script src="https://unpkg.com/typed.js@2.1.0/dist/typed.umd.js"></script>
				<script>
					window.onload = function() {
				    var typed = new Typed('#typed', {
				      strings: ['Developpeur de <strong>passion</strong>', 'Developpeur de <strong>travail</strong>', "<strong>Ingenieur Polytech'</strong>"],
				      typeSpeed: 50,
				      backSpeed: 30,
				      loop: true,
				      smartBackspace: true,
				    });
				  };
				</script>
			</header>
			<br/>
			<br/>
			<br/>
			<br/>
			<Presentation/>
			<br/>
			<br/>
			<br/>
			<br/>
			<Education/>
			</div>
			<div class="langues-header">
				<Icon icon="translate" color="var(--accent-regular)" size="2.5rem" gradient />
				<h3>Langues :</h3>
			</div>
			<Langues/>
			<div class="langues-header">
				<Icon icon="code" color="var(--accent-regular)" size="2.5rem" gradient />
				<h3>Languages :</h3>
			</div>
			<Languages/>
			<div class="langues-header">
				<Icon icon="code" color="var(--accent-regular)" size="2.5rem" gradient />
				<h3>Framework :</h3>
			</div>
			<Framework/>
			<main class="wrapper stack gap-20 lg:gap-48">
				<section class="section with-background with-cta">
					<header class="section-header stack gap-2 lg:gap-4">
						<h3>Mes projets</h3>
					</header>
					<div class="gallery">
					
						<Grid variant="offset">
							<li>
								<PortfolioPreview project={projects[0]} image="/Portfolio/assets/SD1.webp" />
							</li>
							<li>
								<PortfolioPreview project={projects[1]} image="/Portfolio/assets/android-studio.webp" />
							</li>
							<li>
								<PortfolioPreview project={projects[2]} image="/Portfolio/assets/Boubou.webp" />
							</li>
							<li>
								<PortfolioPreview project={projects[3]} image="/Portfolio/assets/adb.webp" />
							</li>
							<li>
								<PortfolioPreview project={projects[4]} image="/Portfolio/assets/spotify.webp" />
							</li>
							<li>
								<PortfolioPreview project={projects[5]} image="/Portfolio/assets/dramaquick.webp" />
							</li>
							<li>
								<PortfolioPreview project={projects[6]} image="/Portfolio/assets/julia3.webp" />
							</li>
							<!--
							{
								projects.slice(2).map((project) => (
									<li>
										<PortfolioPreview project={project} />
									</li>
								))
							}
							-->
					</Grid>
				</div>
			</section>
		</main>

	</div>
</BaseLayout>

<script>
	import {gsap} from 'gsap';
	const observer = new IntersectionObserver(entries => {
	  entries.forEach(entry => {
	    const pres = entry.target.querySelector('.gallery');

	    if (entry.isIntersecting) {
	        let tl1 = gsap.timeline({
	                scrollTrigger:{
	                    trigger: ".gallery",
	                    start: "center 50%",
	                    end: "bottom bottom",
	                    scrub: false,
	                    markers: true,
	                    toggleActions: 'play reverse play reverse'
	                }
	            })
	            tl1.to(".gallery", {
	                duration:3,
	                opacity:1,
	                y: -100,
	                ease: "power4.out"
	            })
	    }
	  });
	});
	
	observer.observe(document.querySelector('.gallery'));
</script>

<style>
	.hero {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100dvh;
	overflow: auto;
    gap: 2rem;
	}

	.gallery{
		margin-top: 100px;
	}

	.roles {
			margin-top: 0.5rem;
			display: flex;
			gap: 0.5rem;
		}

	@media (min-width: 50em) {
		.hero {
			display: grid;
		}
	}

	.langues-header {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem; /* Adjust this value to change the space between the icon and the text */
	}

	/* ====================================================== */

	.section {
		display: grid;
		gap: 2rem;
	}

	.with-background {
		position: relative;
	}

	.with-background::before {
		--hero-bg: var(--bg-image-subtle-2);

		content: '';
		position: absolute;
		pointer-events: none;
		left: 50%;
		width: 100dvw;
		aspect-ratio: calc(2.25 / var(--bg-scale));
		top: 0;
		transform: translateY(-75%) translateX(-50%);
		background:
			url('/assets/backgrounds/noise.png') top center/220px repeat,
			var(--hero-bg) center center / var(--bg-gradient-size) no-repeat,
			var(--gray-999);
		background-blend-mode: overlay, normal, normal, normal;
		mix-blend-mode: var(--bg-blend-mode);
		z-index: -1;
	}

	.with-background.bg-variant::before {
		--hero-bg: var(--bg-image-subtle-1);
	}

	.section-header {
		justify-self: center;
		text-align: center;
		max-width: 50ch;
		font-size: var(--text-md);
		color: var(--gray-300);
	}

	.section-header h3 {
		font-size: var(--text-2xl);
	}

	@media (min-width: 50em) {
		.section {
			grid-template-columns: repeat(4, 1fr);
			grid-template-areas: 'header header header header' 'gallery gallery gallery gallery';
			gap: 5rem;
			
		}

		.section.with-cta {
			grid-template-areas: 'header header header cta' 'gallery gallery gallery gallery';
		}

		.section-header {
			grid-area: header;
			font-size: var(--text-lg);
		}

		.section-header h3 {
			font-size: var(--text-4xl);
		}

		.with-cta .section-header {
			justify-self: flex-start;
			text-align: left;
		}

		.gallery {
			grid-area: gallery;
			opacity: 0;
		}

		.cta {
			grid-area: cta;
		}
	}
</style>
